version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    hostname: kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    volumes:
      - ./data/kafka:/var/run/docker.sock
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    restart: always
    volumes:
      - ./data/mongo:/data/db
  postgres:
    image: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=test
  app_mongodb:
    container_name: app_mongodb
    build: ./app_mongodb
    ports:
      - "8000:8000"
    volumes:
      - ./app_mongodb:/app
    environment:
      - PORT=8000
      - MONGO_URL=mongodb://mongo:27017/test
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=auth_service
    depends_on:
      - mongo
      - kafka
  app_postgres:
    container_name: app_postgres
    build: ./app_postgres
    ports:
      - "8080:8080"
    volumes:
      - ./app_postgres:/app
    environment:
      - PORT=8080
      - POSTGRES_URL=postgres://test:test@postgres:5432/test
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=auth_service
    depends_on:
      - postgres
      - kafka